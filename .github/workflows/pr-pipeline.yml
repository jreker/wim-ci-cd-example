name: Deploy on PR

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

env:
  HEROKU_APP_NAME: wim-stg-pr-${{ github.event.number }}

jobs:
  compile:
    name: Maven Compile
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 8, 18 ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: maven
    - name: Maven Compile
      run: mvn -B compile --file pom.xml

  test:
    name: Maven Test
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: compile
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
        cache: maven
    - name: Maven Test
      run: mvn -B test --file pom.xml
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v1
      if: always()
      with:
        files: "target/surefire-reports/**/*.xml"
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco/
    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true
    - name: Log coverage percentage
      run: |
        echo '# Test coverage' >> $GITHUB_STEP_SUMMARY
        echo '${{ steps.jacoco.outputs.coverage }}' | awk '{printf "Test coverage:  %.0f%", $1 * 100}' >> $GITHUB_STEP_SUMMARY
        echo '  ' >> $GITHUB_STEP_SUMMARY
        echo '${{ steps.jacoco.outputs.branches }}' | awk '{printf "Branch coverage: %.0f%", $1 * 100}' >> $GITHUB_STEP_SUMMARY
    - name: Commit and push the badge (if it changed)
      uses: EndBug/add-and-commit@v7
      with:
        default_author: github_actions
        message: 'commit badge'
        add: '*.svg'
      

  package:
    name: Maven Package
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
        cache: maven
    - name: Maven Package
      run: mvn -B package --file pom.xml -Dmaven.test.skip=true      
    - name: Upload the artifact
      uses: actions/upload-artifact@v2
      with:
        name: calculator.jar
        path:
          target/calculator.jar
        retention-days: 30

  deploy-staging:
    name: Deploy to Staging
    timeout-minutes: 10
    needs: package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.action != 'closed' && github.head_ref || '' }}
      - name: Login to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_email: ${{ secrets.HEROKU_MAIL }}
          heroku_app_name: ${{ env.HEROKU_APP_NAME }}
          justlogin: true

      - name: Create Heroku app
        if: github.event.action == 'opened'
        run: heroku apps:create ${{ env.HEROKU_APP_NAME }} 

      - name: Add Heroku remote
        run: heroku git:remote --app=${{ env.HEROKU_APP_NAME }}
      - name: Push to Heroku
        run: git push heroku ${{ github.head_ref }}:master --force
      - name: Add comment to PR
        if: github.event.action == 'opened'
        run: |
          gh pr comment ${{ github.event.number }} --body '[Heroku app](https://dashboard.heroku.com/apps/${{ env.HEROKU_APP_NAME }}): https://${{ env.HEROKU_APP_NAME }}.herokuapp.com'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Destroy Heroku app
        if: github.event.action == 'closed'
        run: heroku apps:destroy --app=${{ env.HEROKU_APP_NAME }} --confirm=${{ env.HEROKU_APP_NAME }}